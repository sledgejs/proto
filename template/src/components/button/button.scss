@use "../../styles/mixins.scss" as *;

button {
  --button-transition-timing: 0.15s;

  all: unset;

  transition-property: color, background-color, border-color, transform, box-shadow;
  transition-duration: 0.15s;
  transition-timing-function: ease-in-out;

  line-height: 1;
  font-size: 16px;

  &[disabled],
  &[aria-disabled="true"] {
    cursor: default;
    pointer-events: none;
    user-select: none;
    opacity: 0.5;
  }
}

.button {
  --grid-start-icon-column-size: min-content;
  --grid-end-icon-column-size: min-content;

  --x-padding: calc(var(--size) / 2);
  --icon-size: 24px; // TODO: adjust according to size

  transition-property: color, background-color, border-color, transform, box-shadow, outline-color;
  transition-duration: 0.15s;
  transition-timing-function: ease-in-out;

  line-height: 1;
  font-size: 16px;

  display: grid;
  grid-template-columns: [start] var(--grid-start-icon-column-size) [content] 1fr [end] var(--grid-end-icon-column-size);
  cursor: pointer;
  gap: 1ch;
  
  .button-content {
    @include flex-center;
    overflow-y: hidden;
    grid-column: content;
    align-self: stretch;
  }

  .start-icon,
  .end-icon {
    @include flex-center;
    justify-self: stretch;
    align-self: stretch;
    font-size: var(--icon-size);
  }

  .start-icon {
    grid-column: start;
  }

  .end-icon {
    grid-column: end;
  }

  &.left:not(.icon-button) {
    .button-content {
      justify-content: flex-start;
    }
  }

  &.right:not(.icon-button) {
    .button-content {
      justify-content: flex-end;
    }
  }

  &.width-stretch {
    width: -webkit-fill-available;
    width: -moz-available;
    width: fill-available;
    width: stretch;
  }

  // #region Layout
  &.tiny,
  &.small,
  &.medium,
  &.large,
  &.huge {
    height: var(--size);
    min-height: var(--size);
    padding: 0 var(--x-padding);
    border-radius: calc(var(--size) / 2);

    @for $i from 2 through 16 {
      &.width-#{$i} {
        width: calc(var(--size) / 2 * #{$i});
      }
    }
  }

  &.tiny {
    --size: 28px;
    padding: 0 8px;
    font-size: 13px;
  }

  &.small {
    --size: 32px;
    --icon-size: 18px;
    padding: 0 16px;
    font-size: 14px;
  }

  &.medium {
    --size: 40px;
    font-size: 16px;
  }

  &.large {
    --size: 48px;
    padding: 0 20px;
  }

  &.huge {
    --size: 64px;
    font-size: 20px;
    padding: 0 24px;
  }

  &.icon-button {
    grid-template-columns: [content] 1fr;
    padding: 0;
    width: var(--size);

    &.tiny {
      border-radius: 4px;
      font-size: 16px;
    }

    &.small {
      border-radius: 6px;
      font-size: 18px;
    }

    &.medium {
      border-radius: 8px;
      font-size: 20px;
    }
    
    &.large {
      border-radius: 12px;
      font-size: 24px;
    }
    
    &.huge {
      border-radius: 16px;
      font-size: 32px;
    }

    &.round {
      border-radius: 50%;
      padding: 0;
    }
  }

  // #endregion

  &.primary,
  &.secondary {
    color: var(--text-color);
    background-color: var(--background-color);
    border: 1px solid var(--border-color, transparent);
    outline: 1px solid transparent;

    &:focus-visible,
    &.focus {
      outline-color: var(--outline-color);
    }

    &[disabled],
    &.disabled {
      pointer-events: none;
    }
  }

  // #region Colors
  &.primary {
    @include component-color-with-states("primary", "fill");
  }

  &.secondary {
    @include component-color-with-states("secondary", "fill");
  }

  // #endregion

  &.with-start-icon.pivot-start-icon {
    padding-left: 0;
    --grid-start-icon-column-size: var(--size);
  }

  &.with-end-icon.pivot-end-icon {
    padding-right: 0;
    --grid-end-icon-column-size: var(--size);
  }

  &.with-start-icon:not(.left),
  &.with-end-icon:not(.left) {
    --grid-start-icon-column-size: var(--icon-size);
    --grid-end-icon-column-size: var(--icon-size);
  }

  &.with-start-icon.pivot-start-icon:not(.left),
  &.with-end-icon.pivot-end-icon:not(.left) {
    --grid-start-icon-column-size: var(--size);
    --grid-end-icon-column-size: var(--size);
    padding-left: 0;
    padding-right: 0;
  }

  &.transparent {
    background: transparent;
  }

  &.borderless {
    border: none;
  }
}
