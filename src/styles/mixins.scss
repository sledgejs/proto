@forward "./mixins/colors.scss";

@mixin dock($top: 0, $right: $top, $bottom: $top, $left: $right) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin dock-fixed($top: 0, $right: $top, $bottom: $top, $left: $right) {
  position: fixed;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin v-padding($top: 0, $bottom: $top) {
  padding-top: $top;
  padding-bottom: $bottom;
}

@mixin h-padding($left: 0, $right: $left) {
  padding-left: $left;
  padding-right: $right;
}

@mixin v-margin($top: 0, $bottom: $top) {
  margin-top: $top;
  margin-bottom: $bottom;
}

@mixin h-margin($left: 0, $right: $left) {
  margin-left: $left;
  margin-right: $right;
}

@mixin gap($gap: 0) {
  grid-gap: $gap;
  gap: $gap;
}

@mixin width-stretch {
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  width: stretch;
}

@mixin height-stretch {
  height: -webkit-fill-available;
  height: -moz-available;
  height: fill-available;
  height: stretch;
}

@mixin flex-left {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-right {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

@mixin flex-space-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column-stretch-top {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: flex-start;
}

@mixin grid-center {
  display: grid;
  justify-items: center;
  align-items: center;
}

@mixin hide {
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
}

@mixin show {
  opacity: 1;
  visibility: visible;
}

@mixin transition($property, $duration: .15s, $timing-function: ease-in-out, $delay: 0) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing-function;

  @if $delay != 0 {
    transition-delay: $delay;
  }
}